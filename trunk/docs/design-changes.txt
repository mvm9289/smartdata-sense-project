------------------------------------------------------------------------
Cambios de diseño
------------------------------------------------------------------------
a) Almacenamiento del par (núm. muestra, muestra micro) para identificar
errores y conocer el minuto asociado a la muestra.

Modificaciones:
1. La función "get_sensor_sample" escribe en el fichero el par
("sample_interval", "sensor_sample").
2. La función "get_sensor_sample" escribe en el fichero un código de
error en caso de:
- Muestra erronea 
(!) Un error debido al sistema de ficheros 
(abrir el fichero, o escribir) se identificara por la falta
de una muestra (no podemos almacenar un error de escritura).
(códigos a especificar)

3. La función "prepare_packet" deberá leer un número de bytes igual al
máximo múltiplo de la longitud del par 
("sample_interval", "sensor_sample") que no supere los "DATA_SIZE".


b) Eliminar los buffers de red 'input' y 'output'.

Modificaciones:
1. La función callback "received" únicamente diferencia por tipo de 
mensaje recibido y realiza el comportamiento asociado:
- "HELLO_BS" -> anunciar recepción paquete y envío "HELLO_MN".
- "POLL" -> anunciar recepción paquete y reenvio actual paquete de datos 
  (almacenado en "read_buffer").
- "DATA_ACK" -> anunciar recepción paquete y envio del siguiente paquete 
  de datos o vuelta a estado "BLOCKED".
- "HELLO_ACK" -> anunciar recepción paquete y vuelta a estado "BLOCKED".

2. El control del timeout de espera de ACK ("ack_timeout") deberá 
diferenciar entre "hello_ack_timeout" y "data_ack_timeout" que indicará
que mensaje deberá reenviarse (pudiendo ser ambos a la vez).

(!) Cambiará la pérdida de un número mayor del paquetes (en
función del rendimiento del buffer 'input'). Sin embargo del mismo modo
las pérdidas se interpretarán como mensajes perdidos.

------------------------------------------------------------------------
