File Manager Testing
--------------------

1. File "/tests/file-system/fileman-test1.c":
  Tests 'read' and 'write' functions. The data size is one char.
  
  a) When 'writeSampleNumber' reachs MAX_SAMPLE_NUMBER at the first time
     all the next read calls read zero bytes (there's no an explicit 
     'updateReadFile' call).
  
  b) When 'storedFiles' reachs MAX_STORED_FILES the current
     'readFile' is updated and the next 'read' calls read the new 
     'readFile'.
  
  (!) If 'storedFiles' reachs MAX_STORED_FILES and the Mobile Node is 
      sending te current 'readFile' then the current 'readFile' is 
      deleted and it can't be resent if there's an error on Basestation 
      acknowledgement.

2. File "/tests/file-system/fileman-test2.c':
  Tests 'readSeek' function.
  
  When the first 'readFile' es completely readed the read file offset
  pointer is updated to SEEK_POSITION:
     
    0 <= SEEK_POSITION < MAX_SAMPLE_NUMBER
      The next 'read' call reads the current 'readFile' from the 
      SEEK_POSITION position.
    
    SEEK_POSITION >= MAX_SAMPLE NUMBER
      The next 'read' call reads the current 'readFile' from the 
      last position (the number of bytes readed is zero).
    
    SEEK_POSITION < 0
      The read file offset pointer is not updated.

3. File "/tests/file-system/fileman-test3.c':
  Tests 'updateReadFile' function.
  
  When the first 'readFile' es completely readed the current 'readFile'
  is updated NUM_READ_UPDATES' times:
  
  NUM_READ_UPDATES <= 'storedFiles'
    The 'readFile' is updated NUM_READ_UPDATES times and the next 'read' 
    call reads the new 'readFile' from the beginning. The'storedFiles' 
    is correctly updated.
       
  NUM_READ_UPDATES > 'storedFiles'
    The 'readFile' is updated correctly 'storedFiles' times and the next 
    'updateReadFile' calls returns an error (there's no more stored 
    files and 'readFile' can't be updated).

4. File "/tests/file-system/fileman-test4.c':
  Tests 'read' and 'write' functions. The data size is four chars 
  (array validation).

  a) When the 'read' call reads zero bytes of the current 'readFile' 
     the 'updateReadFile' call updates the current 'readFile' to the 
     next stored file. If 'storeFiles' is zero then the 'updateReadFile'
     call does nothing (till 'storedFiles' will become greater than 
     zero).
     
  b) When 'read'/'write' call returns an ERROR_INVALID_FD error, the 
     'readFile'/'writeFile' is reopened to recover from this error.

